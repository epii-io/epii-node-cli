#!/usr/bin/env node

'use strict'

const co = require('co')
const chalk = require('chalk')

const argv = process.argv
const command = argv[2]
const options = argv.slice(3).filter(Boolean)

function space(n) {
  return ' '.repeat(n)
}

// wrap main in try & co
co(function* () {
  try {
    switch (command) {
      case 'init': yield execInit(); break
      default: showHelp(); break
    }
  } catch (error) {
    console.log(error.message)
  }
})

/**
 * command init
 * input project + author & fill template
 */
function* execInit() {
  yield require('../invoke/init.js')({
    name: options[0],
    type: options[1]
  })
}

/**
 * command help
 * output help list
 */
function showHelp() {
  console.log(chalk.white.bold('\n/// EPII Toolkit ///\n'))
  console.log(chalk.yellow('Usage\n'))
  console.log(space(2) + chalk.white.bold('epii <command> <options>'))
  console.log(chalk.yellow('\nCommand\n'))
  console.log(space(2) + chalk.white.bold('init <name>') + space(2) + 'init server project')
  console.log(space(2) + chalk.white.bold('init <name>  --minion') + space(2) + 'init minion project')
  console.log(space(2) + chalk.white.bold('help') + space(2) + 'show help')
  console.log()
}
